(()=>{const t="https://www.soundcloud.com/";class a{constructor(a){this.proxy=a,this.getClientId=async a=>{if(!this.clientId||a){let a=t;this.proxy&&(a=this.proxy+t);const s=await application.networkRequest(a),i=(await s.text()).match(/(?!<script crossorigin src=")https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*\.js)(?=">)/g);let e;do{let t=await application.networkRequest(i?.pop()||"");e=await t.text()}while(!e.includes(',client_id:"')&&(i?.length||0)>0);this.clientId=e.match(/,client_id:"(\w+)"/)?.[1],this.clientId||Promise.reject("Unable to fetch a SoundCloud API key.")}return this.clientId},this.getV2=async(t,a)=>{a||(a={}),a.client_id=await this.getClientId();let s=t="https://api-v2.soundcloud.com/"+t;this.proxy&&(s=this.proxy+t);const i=new URL(s);try{i.search=new URLSearchParams(a).toString();const t=await application.networkRequest(i.toString());return await t.json()}catch{a.client_id=await this.getClientId(!0),i.search=new URLSearchParams(a).toString();const t=await application.networkRequest(i.toString());return await t.json()}}}}class s{constructor(t){this.api=new a(t)}searchTracksV2=async t=>await this.api.getV2("search/tracks",t);searchPlaylistsV2=async t=>await this.api.getV2("search/playlists",t);resolveV2=async t=>{String(t).match(/\d{8,}/)||String(t).includes("soundcloud")||(t=`https://soundcloud.com/${t}`);let a=t;if(String(t).includes("soundcloud")){a=(await this.api.getV2("resolve",{url:t})).id}return a};getTrackV2=async t=>{const a=await this.resolveV2(t);return await this.api.getV2(`tracks/${a}`)};getTracksArrayV2=async t=>{if(0===t.length)return[];const a=[];let s=0;for(;s<t.length;)a.push(t.slice(s,s+=50));const i=await Promise.all(a.map((t=>this.api.getV2("tracks",{ids:t.join(",")}))));return[].concat(...i)};fetchPlaylistTracks=async t=>{const a=t.tracks.splice(t.tracks.findIndex((t=>!t.title))).map((t=>t.id));return 0===a.length||(t.tracks=t.tracks.concat(await this.getTracksArrayV2(a))),t};getPlaylistV2=async t=>{const a=await this.resolveV2(t),s=await this.api.getV2(`playlists/${a}`);return this.fetchPlaylistTracks(s)};getTopPlaylistsV2=async()=>await this.api.getV2("mixed-selections")}const i=t=>{let a=t.artwork_url?t.artwork_url:t.user.avatar_url;return[{url:a,height:100,width:100},{url:a.replace("-large","-t500x500"),height:500,width:500}]},e=t=>({name:t.title,apiId:t.id.toString(),images:i(t)});class r{constructor(t){this.soundcloud=t,this.soundcloudTrackToTrack=t=>({name:t.title,apiId:t.id.toString(),duration:t.duration/1e3,artistName:t.publisher_metadata?.artist||"",source:t.media.transcodings.find(this.trackFilter.bind(this))?.url,images:i(t)})}trackFilter(t){return this.progressiveFilter(t)||this.hlsFilter(t)}progressiveFilter(t){return"audio/mpeg"===t.format.mime_type&&"progressive"===t.format.protocol}hlsFilter(t){return"audio/mpeg"===t.format.mime_type&&"hls"===t.format.protocol}async searchTracks(t){const a=t.pageInfo?.offset||0,s=await(this.soundcloud?.searchTracksV2({q:t.query,limit:50,offset:a})),i=s?.collection.map(this.soundcloudTrackToTrack.bind(this)),e={offset:a,resultsPerPage:50,totalResults:s?.total_results||0};return{items:i?.filter((t=>!!t.source))||[],pageInfo:e}}async searchPlaylists(t){const a=t.pageInfo?.offset||0,s=await(this.soundcloud?.searchPlaylistsV2({q:t.query,limit:50,offset:a})),i=s?.collection.map(e);return{items:i||[],pageInfo:{offset:a,resultsPerPage:50,totalResults:s?.total_results||0}}}async getPlaylistTracks(t){const a=await this.soundcloud.getPlaylistV2(t.apiId||""),s=a?.tracks.map(this.soundcloudTrackToTrack.bind(this));return{items:s?.filter((t=>!!t.source))||[],playlist:a&&{name:a.title,apiId:a.id.toString(),images:i(a)}}}async searchAll(t){const a=this.searchTracks(t),s=this.searchPlaylists(t),[i,e]=await Promise.all([a,s]);return{tracks:i,playlists:e}}async getTopItems(){return{playlists:{items:(await this.soundcloud.getTopPlaylistsV2()).collection.flatMap((t=>t.items.collection.map(e)))}}}async getTrackByUrl(t){const a=await application.isNetworkRequestCorsDisabled(),s=await application.getCorsProxy()||"https://cloudcors.audio-pwa.workers.dev/",i=a?"":s;let e=await this.soundcloud.api.getClientId();const r=await this.soundcloud.getTrackV2(t.apiId||"");let c=r?.media.transcodings.find(this.progressiveFilter.bind(this))?.url||"";c||(c=r?.media.transcodings.find(this.hlsFilter.bind(this))?.url||"");let o="",n=c?.includes("secret_token")?`&client_id=${e}`:`?client_id=${e}`;try{const t=await application.networkRequest(i+c+n);o=(await t.json()).url}catch{e=await this.soundcloud.api.getClientId(!0),n=c?.includes("secret_token")?`&client_id=${e}`:`?client_id=${e}`;const t=await application.networkRequest(i+c+n);o=(await t.json()).url}return o}}(async()=>{const t=await application.isNetworkRequestCorsDisabled();let a,i=await application.getCorsProxy();i||(i="https://cloudcors.audio-pwa.workers.dev/"),a=t?new s:new s(i);const e=new r(a);application.onSearchAll=e.searchAll.bind(e),application.onSearchTracks=e.searchTracks.bind(e),application.onSearchPlaylists=e.searchPlaylists.bind(e),application.onGetPlaylistTracks=e.getPlaylistTracks.bind(e),application.onGetTrackUrl=e.getTrackByUrl.bind(e),application.onGetTopItems=e.getTopItems.bind(e)})()})();